{"ast":null,"code":"/*\n    Copyright (c) 2016, Montage Studio Inc. All Rights Reserved.\n    3-Clause BSD License\n    https://github.com/montagejs/montage/blob/master/LICENSE.md\n*/\nvar Map = require(\"../_map\");\n\nvar ObjectChangeDescriptor = module.exports.ObjectChangeDescriptor = function ObjectChangeDescriptor(name) {\n  this.name = name;\n  this.isActive = false;\n  this._willChangeListeners = null;\n  this._changeListeners = null;\n  return this;\n};\n\nObject.defineProperties(ObjectChangeDescriptor.prototype, {\n  name: {\n    value: null,\n    writable: true\n  },\n  isActive: {\n    value: false,\n    writable: true\n  },\n  _willChangeListeners: {\n    value: null,\n    writable: true\n  },\n  willChangeListeners: {\n    get: function get() {\n      return this._willChangeListeners || (this._willChangeListeners = new this.willChangeListenersRecordConstructor(this.name));\n    }\n  },\n  _changeListeners: {\n    value: null,\n    writable: true\n  },\n  changeListeners: {\n    get: function get() {\n      return this._changeListeners || (this._changeListeners = new this.changeListenersRecordConstructor(this.name));\n    }\n  },\n  changeListenersRecordConstructor: {\n    value: ChangeListenersRecord,\n    writable: true\n  },\n  willChangeListenersRecordConstructor: {\n    value: ChangeListenersRecord,\n    writable: true\n  }\n});\nvar ListenerGhost = module.exports.ListenerGhost = Object.create(null);\nvar ChangeListenerSpecificHandlerMethodName = new Map();\nmodule.exports.ChangeListenersRecord = ChangeListenersRecord;\n\nfunction ChangeListenersRecord(name) {\n  var specificHandlerMethodName = ChangeListenerSpecificHandlerMethodName.get(name);\n\n  if (!specificHandlerMethodName) {\n    specificHandlerMethodName = \"handle\";\n    specificHandlerMethodName += name;\n    specificHandlerMethodName += \"Change\";\n    ChangeListenerSpecificHandlerMethodName.set(name, specificHandlerMethodName);\n  }\n\n  this._current = null;\n  this._current = null;\n  this.specificHandlerMethodName = specificHandlerMethodName;\n  return this;\n}\n\nObject.defineProperties(ChangeListenersRecord.prototype, {\n  _current: {\n    value: null,\n    writable: true\n  },\n  current: {\n    get: function get() {\n      // if(this._current) {\n      //     console.log(this.constructor.name,\" with \",this._current.length,\" listeners: \", this._current);\n      // }\n      return this._current; //return this._current || (this._current = []);\n    },\n    set: function set(value) {\n      this._current = value;\n    }\n  },\n  ListenerGhost: {\n    value: ListenerGhost,\n    writable: true\n  },\n  ghostCount: {\n    value: 0,\n    writable: true\n  },\n  maxListenerGhostRatio: {\n    value: 0.3,\n    writable: true\n  },\n  listenerGhostFilter: {\n    value: function listenerGhostFilter(value) {\n      return value !== this.ListenerGhost;\n    }\n  },\n  removeCurrentGostListenersIfNeeded: {\n    value: function value() {\n      if (this._current && this.ghostCount / this._current.length > this.maxListenerGhostRatio) {\n        this.ghostCount = 0;\n        this._current = this._current.filter(this.listenerGhostFilter, this);\n      }\n\n      return this._current;\n    }\n  },\n  dispatchBeforeChange: {\n    value: false,\n    writable: true\n  },\n  genericHandlerMethodName: {\n    value: \"handlePropertyChange\",\n    writable: true\n  }\n});\nmodule.exports.WillChangeListenersRecord = WillChangeListenersRecord;\nvar WillChangeListenerSpecificHandlerMethodName = new Map();\n\nfunction WillChangeListenersRecord(name) {\n  var specificHandlerMethodName = WillChangeListenerSpecificHandlerMethodName.get(name);\n\n  if (!specificHandlerMethodName) {\n    specificHandlerMethodName = \"handle\";\n    specificHandlerMethodName += name;\n    specificHandlerMethodName += \"WillChange\";\n    WillChangeListenerSpecificHandlerMethodName.set(name, specificHandlerMethodName);\n  }\n\n  this.specificHandlerMethodName = specificHandlerMethodName;\n  return this;\n}\n\nWillChangeListenersRecord.prototype = new ChangeListenersRecord();\nWillChangeListenersRecord.prototype.constructor = WillChangeListenersRecord;\nWillChangeListenersRecord.prototype.genericHandlerMethodName = \"handlePropertyWillChange\";","map":null,"metadata":{},"sourceType":"script"}