{"ast":null,"code":"/* parser generated by jison 0.4.18 */\n\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar Lexico = function () {\n  var o = function o(k, v, _o, l) {\n    for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v) {\n      ;\n    }\n\n    return _o;\n  },\n      $V0 = [1, 7],\n      $V1 = [2, 31],\n      $V2 = [1, 9],\n      $V3 = [1, 10],\n      $V4 = [1, 11],\n      $V5 = [5, 10, 16, 38, 39, 40],\n      $V6 = [16, 17, 25, 33, 34, 35, 36, 37],\n      $V7 = [17, 25, 33, 34, 35, 36, 37],\n      $V8 = [1, 25],\n      $V9 = [17, 20, 24, 25, 33, 34, 35, 36, 37, 38, 39, 40],\n      $Va = [1, 39],\n      $Vb = [1, 34],\n      $Vc = [1, 35],\n      $Vd = [1, 36],\n      $Ve = [1, 37],\n      $Vf = [1, 38],\n      $Vg = [1, 46],\n      $Vh = [1, 67],\n      $Vi = [1, 63],\n      $Vj = [1, 52],\n      $Vk = [1, 59],\n      $Vl = [1, 61],\n      $Vm = [1, 62],\n      $Vn = [1, 64],\n      $Vo = [1, 65],\n      $Vp = [1, 66],\n      $Vq = [14, 31],\n      $Vr = [1, 71],\n      $Vs = [13, 14, 41],\n      $Vt = [1, 72],\n      $Vu = [13, 14, 41, 43],\n      $Vv = [1, 73],\n      $Vw = [13, 14, 41, 43, 45],\n      $Vx = [1, 81],\n      $Vy = [1, 82],\n      $Vz = [13, 14, 41, 43, 45, 50, 51, 52, 53, 54, 55, 56, 58],\n      $VA = [1, 83],\n      $VB = [1, 84],\n      $VC = [13, 14, 41, 43, 45, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61],\n      $VD = [1, 85],\n      $VE = [1, 86],\n      $VF = [13, 14, 41, 43, 45, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64],\n      $VG = [13, 14, 41, 43, 45, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 67];\n\n  var parser = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"S\": 3,\n      \"INICIO\": 4,\n      \"EOF\": 5,\n      \"LISTA_CLASES\": 6,\n      \"DEFCLASE\": 7,\n      \"IMPORTAR\": 8,\n      \"CLASE\": 9,\n      \"Rimport\": 10,\n      \"apar\": 11,\n      \"Tstring\": 12,\n      \"cpar\": 13,\n      \"fin\": 14,\n      \"VISIBILIDAD\": 15,\n      \"Rclass\": 16,\n      \"identi\": 17,\n      \"alla\": 18,\n      \"FUNCIONES\": 19,\n      \"clla\": 20,\n      \"FUNCION\": 21,\n      \"DEF_ATRIBUTO\": 22,\n      \"DEF_ARRAY\": 23,\n      \"DEF_FUNCTION\": 24,\n      \"Rstatic\": 25,\n      \"DEF_TIPO\": 26,\n      \"Rigual\": 27,\n      \"OR\": 28,\n      \"LISTDIM\": 29,\n      \"DIM\": 30,\n      \"acor\": 31,\n      \"ccor\": 32,\n      \"Rint\": 33,\n      \"Rdouble\": 34,\n      \"Rchar\": 35,\n      \"Rboolean\": 36,\n      \"RString\": 37,\n      \"Rpublic\": 38,\n      \"Rprivate\": 39,\n      \"Rprotected\": 40,\n      \"ROr\": 41,\n      \"XOR\": 42,\n      \"RXor\": 43,\n      \"AND\": 44,\n      \"RAnd\": 45,\n      \"NOT\": 46,\n      \"neg\": 47,\n      \"EXP\": 48,\n      \"E\": 49,\n      \"RMayor\": 50,\n      \"RMenor\": 51,\n      \"RMayorIgual\": 52,\n      \"RMenorIgual\": 53,\n      \"RDiferente\": 54,\n      \"RIgualigual\": 55,\n      \"Rmas\": 56,\n      \"T\": 57,\n      \"Rmenos\": 58,\n      \"Rpor\": 59,\n      \"F\": 60,\n      \"Rdiv\": 61,\n      \"Rpot\": 62,\n      \"G\": 63,\n      \"Rmod\": 64,\n      \"U\": 65,\n      \"Rincremento\": 66,\n      \"Rdecremento\": 67,\n      \"UU\": 68,\n      \"numero\": 69,\n      \"Tchar\": 70,\n      \"Rtrue\": 71,\n      \"Rfalse\": 72,\n      \"Rnull\": 73,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      5: \"EOF\",\n      10: \"Rimport\",\n      11: \"apar\",\n      12: \"Tstring\",\n      13: \"cpar\",\n      14: \"fin\",\n      16: \"Rclass\",\n      17: \"identi\",\n      18: \"alla\",\n      20: \"clla\",\n      24: \"DEF_FUNCTION\",\n      25: \"Rstatic\",\n      27: \"Rigual\",\n      31: \"acor\",\n      32: \"ccor\",\n      33: \"Rint\",\n      34: \"Rdouble\",\n      35: \"Rchar\",\n      36: \"Rboolean\",\n      37: \"RString\",\n      38: \"Rpublic\",\n      39: \"Rprivate\",\n      40: \"Rprotected\",\n      41: \"ROr\",\n      43: \"RXor\",\n      45: \"RAnd\",\n      47: \"neg\",\n      50: \"RMayor\",\n      51: \"RMenor\",\n      52: \"RMayorIgual\",\n      53: \"RMenorIgual\",\n      54: \"RDiferente\",\n      55: \"RIgualigual\",\n      56: \"Rmas\",\n      58: \"Rmenos\",\n      59: \"Rpor\",\n      61: \"Rdiv\",\n      62: \"Rpot\",\n      64: \"Rmod\",\n      66: \"Rincremento\",\n      67: \"Rdecremento\",\n      69: \"numero\",\n      70: \"Tchar\",\n      71: \"Rtrue\",\n      72: \"Rfalse\",\n      73: \"Rnull\"\n    },\n    productions_: [0, [3, 2], [4, 1], [6, 2], [6, 1], [7, 1], [7, 1], [8, 5], [9, 6], [19, 2], [19, 1], [21, 2], [21, 2], [21, 2], [22, 6], [22, 5], [22, 4], [22, 3], [23, 4], [29, 2], [29, 1], [30, 2], [26, 1], [26, 1], [26, 1], [26, 1], [26, 1], [26, 1], [15, 1], [15, 1], [15, 1], [15, 0], [28, 3], [28, 1], [42, 3], [42, 1], [44, 3], [44, 1], [46, 2], [46, 1], [48, 3], [48, 3], [48, 3], [48, 3], [48, 3], [48, 3], [48, 1], [49, 3], [49, 3], [49, 1], [57, 3], [57, 3], [57, 1], [60, 3], [60, 3], [60, 1], [63, 2], [63, 2], [63, 1], [65, 2], [65, 1], [68, 1], [68, 1], [68, 1], [68, 1], [68, 1], [68, 1], [68, 3]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate\n    /* action[1] */\n    , $$\n    /* vstack */\n    , _$\n    /* lstack */\n    ) {\n      /* this == yyval */\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 1:\n          console.log(\"entro al Inicio\");\n          raizArbol = $$[$0 - 1];\n          return raizArbol;\n          break;\n\n        case 2:\n          var tmp = new Nodo(\"INICIO\", \"noterminal\", yylineno, 0, countNodo);\n          tmp.addHijo($$[$0]);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 3:\n        case 9:\n        case 19:\n          var tmp = $$[$0 - 1];\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 4:\n          var tmp = new Nodo(\"LISTA_CLASES\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 5:\n        case 6:\n          var tmp = new Nodo(\"DEFCLASE\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 7:\n          var tmp = new Nodo(\"IMPORTAR\", $$[$0 - 2].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 8:\n          var tmp = new Nodo(\"CLASE\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"identi\", $$[$0 - 3].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 5]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 1]);\n          this.$ = tmp;\n          break;\n\n        case 10:\n          var tmp = new Nodo(\"FUNCIONES\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 11:\n        case 12:\n        case 13:\n          var tmp = new Nodo(\"FUNCION\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 1]);\n          this.$ = tmp;\n          break;\n\n        case 14:\n          var tmp = new Nodo(\"DEF_ATRIBUTO\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"STATIC\", \"static\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp3 = new Nodo(\"identi\", $$[$0 - 2].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 5]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 3]);\n          tmp.addHijo(tmp3);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 15:\n          var tmp = new Nodo(\"DEF_ATRIBUTO\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"NO_STATIC\", \"no_static\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp3 = new Nodo(\"identi\", $$[$0 - 2].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 4]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 3]);\n          tmp.addHijo(tmp3);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 16:\n          var tmp = new Nodo(\"DEF_ATRIBUTO\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"STATIC\", \"static\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp3 = new Nodo(\"identi\", $$[$0].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 3]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 1]);\n          tmp.addHijo(tmp3);\n          this.$ = tmp;\n          break;\n\n        case 17:\n          var tmp = new Nodo(\"DEF_ATRIBUTO\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"NO_STATIC\", \"no_static\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp3 = new Nodo(\"identi\", $$[$0].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 1]);\n          tmp.addHijo(tmp3);\n          this.$ = tmp;\n          break;\n\n        case 18:\n          var tmp = new Nodo(\"DEF_ARRAY\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp2 = new Nodo(\"NO_STATIC\", \"no_static\", yylineno, 0, countNodo);\n          countNodo++;\n          var tmp3 = new Nodo(\"identi\", $$[$0 - 1].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 3]);\n          tmp.addHijo(tmp2);\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo(tmp3);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 20:\n          var tmp = new Nodo(\"LISTA_DIMENSIONES\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 21:\n          var tmp = new Nodo(\"DIMENSION\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 22:\n          var tmp = new Nodo(\"DEF_TIPO\", \"int\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 23:\n          var tmp = new Nodo(\"DEF_TIPO\", \"double\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 24:\n          var tmp = new Nodo(\"DEF_TIPO\", \"char\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 25:\n          var tmp = new Nodo(\"DEF_TIPO\", \"boolean\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 26:\n          var tmp = new Nodo(\"DEF_TIPO\", \"string\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 27:\n          var tmp = new Nodo(\"DEF_TIPO\", $$[$0].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 28:\n          console.log(\"entro al Inicio\");\n          var tmp = new Nodo(\"publico\", yytext.replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 29:\n          var tmp = new Nodo(\"privado\", yytext.replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 30:\n          var tmp = new Nodo(\"protegido\", yytext.replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 31:\n          var tmp = new Nodo(\"publico\", \"publico\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 32:\n          var tmp = new Nodo(\"OR\", \"or\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 33:\n          var tmp = new Nodo(\"OR\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 34:\n          var tmp = new Nodo(\"XOR\", \"xor\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 35:\n          var tmp = new Nodo(\"XOR\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 36:\n          var tmp = new Nodo(\"AND\", \"and\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 37:\n          var tmp = new Nodo(\"AND\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 38:\n          var tmp = new Nodo(\"NOT\", \"not\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 39:\n          var tmp = new Nodo(\"NOT\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 40:\n          var tmp = new Nodo(\"EXP\", \">\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 41:\n          var tmp = new Nodo(\"EXP\", \"<\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 42:\n          var tmp = new Nodo(\"EXP\", \">=\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 43:\n          var tmp = new Nodo(\"EXP\", \"<=\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 44:\n          var tmp = new Nodo(\"EXP\", \"!=\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 45:\n          var tmp = new Nodo(\"EXP\", \"==\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 46:\n          var tmp = new Nodo(\"EXP\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 47:\n          var tmp = new Nodo(\"E\", \"+\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 48:\n          var tmp = new Nodo(\"E\", \"-\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 49:\n        case 60:\n          var tmp = new Nodo(\"E\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 50:\n          var tmp = new Nodo(\"T\", \"*\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 51:\n          var tmp = new Nodo(\"T\", \"/\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 52:\n          var tmp = new Nodo(\"T\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 53:\n          var tmp = new Nodo(\"F\", \"^\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 54:\n          var tmp = new Nodo(\"F\", \"%\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 2]);\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 55:\n          var tmp = new Nodo(\"F\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 56:\n          var tmp = new Nodo(\"G\", \"++\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 1]);\n          this.$ = tmp;\n          break;\n\n        case 57:\n          var tmp = new Nodo(\"G\", \"--\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0 - 1]);\n          this.$ = tmp;\n          break;\n\n        case 58:\n          var tmp = new Nodo(\"G\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 59:\n          var tmp = new Nodo(\"E\", \"-\", yylineno, 0, countNodo);\n          countNodo++;\n          tmp.addHijo($$[$0]);\n          this.$ = tmp;\n          break;\n\n        case 61:\n        case 62:\n        case 64:\n        case 65:\n          var tmp = new Nodo(\"U\", $$[$0].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 63:\n          var tmp = new Nodo(\"U\", $$[$0].replace(\"\\\"\", \"\").replace(\"\\\"\", \"\").replace(\"\\\"\", \"\").replace(\"\\\"\", \"\"), yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 66:\n          var tmp = new Nodo(\"U\", \"-1\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n\n        case 67:\n          var tmp = new Nodo(\"U\", \"noterminal\", yylineno, 0, countNodo);\n          countNodo++;\n          this.$ = tmp;\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      6: 3,\n      7: 4,\n      8: 5,\n      9: 6,\n      10: $V0,\n      15: 8,\n      16: $V1,\n      38: $V2,\n      39: $V3,\n      40: $V4\n    }, {\n      1: [3]\n    }, {\n      5: [1, 12]\n    }, {\n      5: [2, 2],\n      7: 13,\n      8: 5,\n      9: 6,\n      10: $V0,\n      15: 8,\n      16: $V1,\n      38: $V2,\n      39: $V3,\n      40: $V4\n    }, o($V5, [2, 4]), o($V5, [2, 5]), o($V5, [2, 6]), {\n      11: [1, 14]\n    }, {\n      16: [1, 15]\n    }, o($V6, [2, 28]), o($V6, [2, 29]), o($V6, [2, 30]), {\n      1: [2, 1]\n    }, o($V5, [2, 3]), {\n      12: [1, 16]\n    }, {\n      17: [1, 17]\n    }, {\n      13: [1, 18]\n    }, {\n      18: [1, 19]\n    }, {\n      14: [1, 20]\n    }, o($V7, $V1, {\n      19: 21,\n      21: 22,\n      22: 23,\n      23: 24,\n      15: 26,\n      24: $V8,\n      38: $V2,\n      39: $V3,\n      40: $V4\n    }), o($V5, [2, 7]), o($V7, $V1, {\n      22: 23,\n      23: 24,\n      15: 26,\n      21: 28,\n      20: [1, 27],\n      24: $V8,\n      38: $V2,\n      39: $V3,\n      40: $V4\n    }), o($V9, [2, 10]), {\n      14: [1, 29]\n    }, {\n      14: [1, 30]\n    }, {\n      14: [1, 31]\n    }, {\n      17: $Va,\n      25: [1, 32],\n      26: 33,\n      33: $Vb,\n      34: $Vc,\n      35: $Vd,\n      36: $Ve,\n      37: $Vf\n    }, o($V5, [2, 8]), o($V9, [2, 9]), o($V9, [2, 11]), o($V9, [2, 12]), o($V9, [2, 13]), {\n      17: $Va,\n      26: 40,\n      33: $Vb,\n      34: $Vc,\n      35: $Vd,\n      36: $Ve,\n      37: $Vf\n    }, {\n      17: [1, 41]\n    }, {\n      17: [2, 22]\n    }, {\n      17: [2, 23]\n    }, {\n      17: [2, 24]\n    }, {\n      17: [2, 25]\n    }, {\n      17: [2, 26]\n    }, {\n      17: [2, 27]\n    }, {\n      17: [1, 42]\n    }, {\n      14: [2, 17],\n      27: [1, 43],\n      29: 44,\n      30: 45,\n      31: $Vg\n    }, {\n      14: [2, 16],\n      27: [1, 47]\n    }, {\n      11: $Vh,\n      12: $Vi,\n      28: 48,\n      42: 49,\n      44: 50,\n      46: 51,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      14: [2, 18],\n      30: 68,\n      31: $Vg\n    }, o($Vq, [2, 20]), {\n      32: [1, 69]\n    }, {\n      11: $Vh,\n      12: $Vi,\n      28: 70,\n      42: 49,\n      44: 50,\n      46: 51,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      14: [2, 15],\n      41: $Vr\n    }, o($Vs, [2, 33], {\n      43: $Vt\n    }), o($Vu, [2, 35], {\n      45: $Vv\n    }), o($Vw, [2, 37]), {\n      11: $Vh,\n      12: $Vi,\n      48: 74,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, o($Vw, [2, 39]), o($Vw, [2, 46], {\n      50: [1, 75],\n      51: [1, 76],\n      52: [1, 77],\n      53: [1, 78],\n      54: [1, 79],\n      55: [1, 80],\n      56: $Vx,\n      58: $Vy\n    }), o($Vz, [2, 49], {\n      59: $VA,\n      61: $VB\n    }), o($VC, [2, 52], {\n      62: $VD,\n      64: $VE\n    }), o($VF, [2, 55]), o($VF, [2, 58], {\n      66: [1, 87],\n      67: [1, 88]\n    }), {\n      11: $Vh,\n      12: $Vi,\n      68: 89,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, o($VG, [2, 60]), o($VG, [2, 61]), o($VG, [2, 62]), o($VG, [2, 63]), o($VG, [2, 64]), o($VG, [2, 65]), o($VG, [2, 66]), {\n      11: $Vh,\n      12: $Vi,\n      28: 90,\n      42: 49,\n      44: 50,\n      46: 51,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, o($Vq, [2, 19]), o($Vq, [2, 21]), {\n      14: [2, 14],\n      41: $Vr\n    }, {\n      11: $Vh,\n      12: $Vi,\n      42: 91,\n      44: 50,\n      46: 51,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      44: 92,\n      46: 51,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      46: 93,\n      47: $Vj,\n      48: 53,\n      49: 54,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, o($Vw, [2, 38]), {\n      11: $Vh,\n      12: $Vi,\n      49: 94,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      49: 95,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      49: 96,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      49: 97,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      49: 98,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      49: 99,\n      57: 55,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      57: 100,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      57: 101,\n      58: $Vk,\n      60: 56,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      58: $Vk,\n      60: 102,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      58: $Vk,\n      60: 103,\n      63: 57,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      58: $Vk,\n      63: 104,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, {\n      11: $Vh,\n      12: $Vi,\n      58: $Vk,\n      63: 105,\n      65: 58,\n      68: 60,\n      69: $Vl,\n      70: $Vm,\n      71: $Vn,\n      72: $Vo,\n      73: $Vp\n    }, o($VF, [2, 56]), o($VF, [2, 57]), o($VG, [2, 59]), {\n      13: [1, 106],\n      41: $Vr\n    }, o($Vs, [2, 32], {\n      43: $Vt\n    }), o($Vu, [2, 34], {\n      45: $Vv\n    }), o($Vw, [2, 36]), o($Vw, [2, 40], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vw, [2, 41], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vw, [2, 42], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vw, [2, 43], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vw, [2, 44], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vw, [2, 45], {\n      56: $Vx,\n      58: $Vy\n    }), o($Vz, [2, 47], {\n      59: $VA,\n      61: $VB\n    }), o($Vz, [2, 48], {\n      59: $VA,\n      61: $VB\n    }), o($VC, [2, 50], {\n      62: $VD,\n      64: $VE\n    }), o($VC, [2, 51], {\n      62: $VD,\n      64: $VE\n    }), o($VF, [2, 53]), o($VF, [2, 54]), o($VG, [2, 67])],\n    defaultActions: {\n      12: [2, 1],\n      34: [2, 22],\n      35: [2, 23],\n      36: [2, 24],\n      37: [2, 25],\n      38: [2, 26],\n      39: [2, 27]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          tstack = [],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = '',\n          yylineno = 0,\n          yyleng = 0,\n          recovering = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n\n      lexer.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer;\n      sharedState.yy.parser = this;\n\n      if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n      }\n\n      var yyloc = lexer.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer.options && lexer.options.ranges;\n\n      if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n\n      _token_stack: var lex = function lex() {\n        var token;\n        token = lexer.lex() || EOF;\n\n        if (typeof token !== 'number') {\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      };\n\n      var symbol,\n          preErrorSymbol,\n          state,\n          action,\n          a,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == 'undefined') {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n          var errStr = '';\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push('\\'' + this.terminals_[p] + '\\'');\n            }\n          }\n\n          if (lexer.showPosition) {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n          } else {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n          }\n\n          this.parseError(errStr, {\n            text: lexer.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer.yylineno,\n            loc: yyloc,\n            expected: expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n\n            if (!preErrorSymbol) {\n              yyleng = lexer.yyleng;\n              yytext = lexer.yytext;\n              yylineno = lexer.yylineno;\n              yyloc = lexer.yylloc;\n\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== 'undefined') {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n  var countNodo = 0;\n  var raizArbol;\n  exports.__esModule = true;\n\n  require(\"collections/shim-array\");\n\n  require(\"collections/listen/array-changes\");\n\n  var Nodo =\n  /** @class */\n  function () {\n    function Nodo(etq, lex, linea, columna, ide) {\n      this.etiqueta = etq;\n      this.lexema = lex;\n      this.linea = linea;\n      this.columna = columna;\n      this.id = ide;\n      this.hijos = new Array();\n    }\n\n    Nodo.prototype.addHijo = function (nuevo) {\n      this.hijos.push(nuevo);\n    };\n\n    Nodo.prototype.NodoC = function (etq, id, linea, columna) {\n      this.etiqueta = etq;\n      this.lexema = id;\n      this.linea = linea;\n      this.columna = columna;\n      this.hijos = new Array();\n    };\n\n    return Nodo;\n  }();\n\n  exports.Nodo = Nodo;\n  /* generated by jison-lex 0.3.4 */\n\n  var lexer = function () {\n    var lexer = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function setInput(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function input() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function unput(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len); //this.yyleng -= len;\n\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function more() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function reject() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function less(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function pastInput() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function upcomingInput() {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function showPosition() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function test_match(match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          // save context\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          // recover context\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function next() {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = '';\n          this.match = '';\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue; // rule action called reject() implying a rule MISmatch.\n              } else {\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          } // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 16;\n            break;\n\n          case 1:\n            return 10;\n            break;\n\n          case 2:\n            return 39;\n            break;\n\n          case 3:\n            return 40;\n            break;\n\n          case 4:\n            return 38;\n            break;\n\n          case 5:\n            return 33;\n            break;\n\n          case 6:\n            return 34;\n            break;\n\n          case 7:\n            return 35;\n            break;\n\n          case 8:\n            return 36;\n            break;\n\n          case 9:\n            return 37;\n            break;\n\n          case 10:\n            return 'Rasbstract';\n            break;\n\n          case 11:\n            return 'Rbreak';\n            break;\n\n          case 12:\n            return 'R_case';\n            break;\n\n          case 13:\n            return 'R_catch';\n            break;\n\n          case 14:\n            return 'R_continue';\n            break;\n\n          case 15:\n            return 'R_default';\n            break;\n\n          case 16:\n            return 'R_do';\n            break;\n\n          case 17:\n            return 'R_else';\n            break;\n\n          case 18:\n            return 'R_extends';\n            break;\n\n          case 19:\n            return 'R_for';\n            break;\n\n          case 20:\n            return 'R_final';\n            break;\n\n          case 21:\n            return 'R_graph_dot';\n            break;\n\n          case 22:\n            return 'R_if';\n            break;\n\n          case 23:\n            return 'R_instanceof';\n            break;\n\n          case 24:\n            return 'R_message';\n            break;\n\n          case 25:\n            return 'R_new';\n            break;\n\n          case 26:\n            return 'R_object';\n            break;\n\n          case 27:\n            return 'R_println';\n            break;\n\n          case 28:\n            return 'R_return';\n            break;\n\n          case 29:\n            return 'R_read_console';\n            break;\n\n          case 30:\n            return 'R_read_file';\n            break;\n\n          case 31:\n            return 25;\n            break;\n\n          case 32:\n            return 'R_str';\n            break;\n\n          case 33:\n            return 'R_super';\n            break;\n\n          case 34:\n            return 'R_switch';\n            break;\n\n          case 35:\n            return 'R_this';\n            break;\n\n          case 36:\n            return 'R_toChar';\n            break;\n\n          case 37:\n            return 'R_toDouble';\n            break;\n\n          case 38:\n            return 'R_toString';\n            break;\n\n          case 39:\n            return 'R_toInt';\n            break;\n\n          case 40:\n            return 'R_try';\n            break;\n\n          case 41:\n            return 'R_while';\n            break;\n\n          case 42:\n            return 'R_write_file';\n            break;\n\n          case 43:\n            return 41;\n            break;\n\n          case 44:\n            return 43;\n            break;\n\n          case 45:\n            return 45;\n            break;\n\n          case 46:\n            return 47;\n            break;\n\n          case 47:\n            return 50;\n            break;\n\n          case 48:\n            return 51;\n            break;\n\n          case 49:\n            return 52;\n            break;\n\n          case 50:\n            return 53;\n            break;\n\n          case 51:\n            return 54;\n            break;\n\n          case 52:\n            return 55;\n            break;\n\n          case 53:\n            return 56;\n            break;\n\n          case 54:\n            return 58;\n            break;\n\n          case 55:\n            return 59;\n            break;\n\n          case 56:\n            return 61;\n            break;\n\n          case 57:\n            return 62;\n            break;\n\n          case 58:\n            return 64;\n            break;\n\n          case 59:\n            return 66;\n            break;\n\n          case 60:\n            return 67;\n            break;\n\n          case 61:\n            return 'RInterrogacion';\n            break;\n\n          case 62:\n            return 'RDosPuntos';\n            break;\n\n          case 63:\n            return 14;\n            break;\n\n          case 64:\n            return 71;\n            break;\n\n          case 65:\n            return 72;\n            break;\n\n          case 66:\n            return 73;\n            break;\n\n          case 67:\n            return 18;\n            break;\n\n          case 68:\n            return 20;\n            break;\n\n          case 69:\n            return 31;\n            break;\n\n          case 70:\n            return 32;\n            break;\n\n          case 71:\n            return 11;\n            break;\n\n          case 72:\n            return 13;\n            break;\n\n          case 73:\n            return 27;\n            break;\n\n          case 74:\n            return 69;\n            break;\n\n          case 75:\n            return 17;\n            break;\n\n          case 76:\n            return 12;\n            break;\n\n          case 77:\n            return 70;\n            break;\n\n          case 78:\n            /* skip whitespace */\n            break;\n\n          case 79:\n            return 5;\n            break;\n\n          case 80:\n            return 'INVALID';\n            break;\n        }\n      },\n      rules: [/^(?:class\\b)/, /^(?:import\\b)/, /^(?:private\\b)/, /^(?:protected\\b)/, /^(?:public\\b)/, /^(?:int\\b)/, /^(?:double\\b)/, /^(?:char\\b)/, /^(?:boolean\\b)/, /^(?:String\\b)/, /^(?:abstract\\b)/, /^(?:break\\b)/, /^(?:case\\b)/, /^(?:catch\\b)/, /^(?:continue\\b)/, /^(?:default\\b)/, /^(?:do\\b)/, /^(?:else\\b)/, /^(?:extends\\b)/, /^(?:for\\b)/, /^(?:final\\b)/, /^(?:graph_dot\\b)/, /^(?:if\\b)/, /^(?:instanceof\\b)/, /^(?:message\\b)/, /^(?:new\\b)/, /^(?:Object\\b)/, /^(?:println\\b)/, /^(?:return\\b)/, /^(?:read_console\\b)/, /^(?:read_file\\b)/, /^(?:static\\b)/, /^(?:str\\b)/, /^(?:super\\b)/, /^(?:switch\\b)/, /^(?:this\\b)/, /^(?:toChar\\b)/, /^(?:toDouble\\b)/, /^(?:toString\\b)/, /^(?:toInt\\b)/, /^(?:try\\b)/, /^(?:while\\b)/, /^(?:write_file\\b)/, /^(?:\\|\\|)/, /^(?:\\|\\^)/, /^(?:&&)/, /^(?:!)/, /^(?:>)/, /^(?:<)/, /^(?:>=)/, /^(?:<=)/, /^(?:!=)/, /^(?:==)/, /^(?:\\+)/, /^(?:-)/, /^(?:\\*)/, /^(?:\\/)/, /^(?:\\^)/, /^(?:%)/, /^(?:\\+\\+)/, /^(?:--)/, /^(?:\\?)/, /^(?::)/, /^(?:;)/, /^(?:true\\b)/, /^(?:false\\b)/, /^(?:null\\b)/, /^(?:\\{)/, /^(?:\\})/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\()/, /^(?:\\))/, /^(?:=)/, /^(?:-?[0-9]+(\\.[0-9]+)?\\b)/, /^(?:[a-zA-Z]([0-9A-Za-z]|_)*)/, /^(?:(\"[^\\\"]+\"))/, /^(?:( \\[a-zñA-ZÑ\\] \\| \\[0-9\\] ))/, /^(?:\\s+)/, /^(?:$)/, /^(?:.)/],\n      conditions: {\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer;\n  }();\n\n  parser.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser;\n  parser.Parser = Parser;\n  return new Parser();\n}();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  exports.parser = Lexico;\n  exports.Parser = Lexico.Parser;\n\n  exports.parse = function () {\n    return Lexico.parse.apply(Lexico, arguments);\n  };\n\n  exports.main = function commonjsMain(args) {\n    if (!args[1]) {\n      console.log('Usage: ' + args[0] + ' FILE');\n      process.exit(1);\n    }\n\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\n    return exports.parser.parse(source);\n  };\n\n  if (typeof module !== 'undefined' && require.main === module) {\n    exports.main(process.argv.slice(1));\n  }\n}","map":{"version":3,"sources":["/Users/carlosmonterroso/Desktop/Proyecto2Compi2_12019/caas/src/Analizadores/Lexico.js"],"names":["Lexico","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","parser","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","console","log","raizArbol","tmp","Nodo","countNodo","addHijo","$","replace","tmp2","tmp3","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","popStack","n","_token_stack","lex","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","exports","__esModule","require","etq","linea","columna","ide","etiqueta","lexema","id","hijos","nuevo","NodoC","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser","main","commonjsMain","process","exit","source","readFileSync","normalize","module","argv"],"mappings":"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A,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,gBAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,YAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAA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","sourcesContent":["/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar Lexico = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[2,31],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[5,10,16,38,39,40],$V6=[16,17,25,33,34,35,36,37],$V7=[17,25,33,34,35,36,37],$V8=[1,25],$V9=[17,20,24,25,33,34,35,36,37,38,39,40],$Va=[1,39],$Vb=[1,34],$Vc=[1,35],$Vd=[1,36],$Ve=[1,37],$Vf=[1,38],$Vg=[1,46],$Vh=[1,67],$Vi=[1,63],$Vj=[1,52],$Vk=[1,59],$Vl=[1,61],$Vm=[1,62],$Vn=[1,64],$Vo=[1,65],$Vp=[1,66],$Vq=[14,31],$Vr=[1,71],$Vs=[13,14,41],$Vt=[1,72],$Vu=[13,14,41,43],$Vv=[1,73],$Vw=[13,14,41,43,45],$Vx=[1,81],$Vy=[1,82],$Vz=[13,14,41,43,45,50,51,52,53,54,55,56,58],$VA=[1,83],$VB=[1,84],$VC=[13,14,41,43,45,50,51,52,53,54,55,56,58,59,61],$VD=[1,85],$VE=[1,86],$VF=[13,14,41,43,45,50,51,52,53,54,55,56,58,59,61,62,64],$VG=[13,14,41,43,45,50,51,52,53,54,55,56,58,59,61,62,64,66,67];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"S\":3,\"INICIO\":4,\"EOF\":5,\"LISTA_CLASES\":6,\"DEFCLASE\":7,\"IMPORTAR\":8,\"CLASE\":9,\"Rimport\":10,\"apar\":11,\"Tstring\":12,\"cpar\":13,\"fin\":14,\"VISIBILIDAD\":15,\"Rclass\":16,\"identi\":17,\"alla\":18,\"FUNCIONES\":19,\"clla\":20,\"FUNCION\":21,\"DEF_ATRIBUTO\":22,\"DEF_ARRAY\":23,\"DEF_FUNCTION\":24,\"Rstatic\":25,\"DEF_TIPO\":26,\"Rigual\":27,\"OR\":28,\"LISTDIM\":29,\"DIM\":30,\"acor\":31,\"ccor\":32,\"Rint\":33,\"Rdouble\":34,\"Rchar\":35,\"Rboolean\":36,\"RString\":37,\"Rpublic\":38,\"Rprivate\":39,\"Rprotected\":40,\"ROr\":41,\"XOR\":42,\"RXor\":43,\"AND\":44,\"RAnd\":45,\"NOT\":46,\"neg\":47,\"EXP\":48,\"E\":49,\"RMayor\":50,\"RMenor\":51,\"RMayorIgual\":52,\"RMenorIgual\":53,\"RDiferente\":54,\"RIgualigual\":55,\"Rmas\":56,\"T\":57,\"Rmenos\":58,\"Rpor\":59,\"F\":60,\"Rdiv\":61,\"Rpot\":62,\"G\":63,\"Rmod\":64,\"U\":65,\"Rincremento\":66,\"Rdecremento\":67,\"UU\":68,\"numero\":69,\"Tchar\":70,\"Rtrue\":71,\"Rfalse\":72,\"Rnull\":73,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",10:\"Rimport\",11:\"apar\",12:\"Tstring\",13:\"cpar\",14:\"fin\",16:\"Rclass\",17:\"identi\",18:\"alla\",20:\"clla\",24:\"DEF_FUNCTION\",25:\"Rstatic\",27:\"Rigual\",31:\"acor\",32:\"ccor\",33:\"Rint\",34:\"Rdouble\",35:\"Rchar\",36:\"Rboolean\",37:\"RString\",38:\"Rpublic\",39:\"Rprivate\",40:\"Rprotected\",41:\"ROr\",43:\"RXor\",45:\"RAnd\",47:\"neg\",50:\"RMayor\",51:\"RMenor\",52:\"RMayorIgual\",53:\"RMenorIgual\",54:\"RDiferente\",55:\"RIgualigual\",56:\"Rmas\",58:\"Rmenos\",59:\"Rpor\",61:\"Rdiv\",62:\"Rpot\",64:\"Rmod\",66:\"Rincremento\",67:\"Rdecremento\",69:\"numero\",70:\"Tchar\",71:\"Rtrue\",72:\"Rfalse\",73:\"Rnull\"},\nproductions_: [0,[3,2],[4,1],[6,2],[6,1],[7,1],[7,1],[8,5],[9,6],[19,2],[19,1],[21,2],[21,2],[21,2],[22,6],[22,5],[22,4],[22,3],[23,4],[29,2],[29,1],[30,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[15,1],[15,1],[15,1],[15,0],[28,3],[28,1],[42,3],[42,1],[44,3],[44,1],[46,2],[46,1],[48,3],[48,3],[48,3],[48,3],[48,3],[48,3],[48,1],[49,3],[49,3],[49,1],[57,3],[57,3],[57,1],[60,3],[60,3],[60,1],[63,2],[63,2],[63,1],[65,2],[65,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,1],[68,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n \n            console.log(\"entro al Inicio\");\n            raizArbol=$$[$0-1];\n            return raizArbol;\n        \nbreak;\ncase 2:\n\n    var tmp = new Nodo(\"INICIO\",\"noterminal\",yylineno,0,countNodo);\n    tmp.addHijo($$[$0]);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 3: case 9: case 19:\n\n    var tmp = $$[$0-1];\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 4:\n\n    var tmp = new Nodo(\"LISTA_CLASES\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 5: case 6:\n\n    var tmp = new Nodo(\"DEFCLASE\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 7:\n\n    var tmp = new Nodo(\"IMPORTAR\",$$[$0-2].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 8:\n\n    var tmp = new Nodo(\"CLASE\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n\n    var tmp2 = new Nodo(\"identi\",$$[$0-3].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-5]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-1]);\n\n    this.$ = tmp;\n\n\nbreak;\ncase 10:\n\n    var tmp = new Nodo(\"FUNCIONES\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 11: case 12: case 13:\n\n    var tmp = new Nodo(\"FUNCION\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-1]);\n    this.$ = tmp;\n\nbreak;\ncase 14:\n\n    var tmp = new Nodo(\"DEF_ATRIBUTO\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp2 = new Nodo(\"STATIC\",\"static\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp3 = new Nodo(\"identi\",$$[$0-2].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-5]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-3]);\n    tmp.addHijo(tmp3);\n    tmp.addHijo($$[$0]);\n\n    this.$ = tmp;\n\nbreak;\ncase 15:\n\n    var tmp = new Nodo(\"DEF_ATRIBUTO\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp2 = new Nodo(\"NO_STATIC\",\"no_static\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp3 = new Nodo(\"identi\",$$[$0-2].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-4]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-3]);\n    tmp.addHijo(tmp3);\n    tmp.addHijo($$[$0]);\n\n    this.$ = tmp;\n\n\nbreak;\ncase 16:\n\n    var tmp = new Nodo(\"DEF_ATRIBUTO\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp2 = new Nodo(\"STATIC\",\"static\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp3 = new Nodo(\"identi\",$$[$0].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-3]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-1]);\n    tmp.addHijo(tmp3);\n\n    this.$ = tmp;\n\nbreak;\ncase 17:\n\n    var tmp = new Nodo(\"DEF_ATRIBUTO\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp2 = new Nodo(\"NO_STATIC\",\"no_static\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp3 = new Nodo(\"identi\",$$[$0].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-1]);\n    tmp.addHijo(tmp3);\n\n    this.$ = tmp;\n\n\nbreak;\ncase 18:\n\n    var tmp = new Nodo(\"DEF_ARRAY\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp2 = new Nodo(\"NO_STATIC\",\"no_static\",yylineno,0,countNodo);\n    countNodo++;\n    var tmp3 = new Nodo(\"identi\",$$[$0-1].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n\n    tmp.addHijo($$[$0-3]);\n    tmp.addHijo(tmp2);\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo(tmp3);\n    tmp.addHijo($$[$0]);\n\n    this.$ = tmp;\n\nbreak;\ncase 20:\n\n    var tmp = new Nodo(\"LISTA_DIMENSIONES\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 21:\n\n    var tmp = new Nodo(\"DIMENSION\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 22:\n\n    var tmp = new Nodo(\"DEF_TIPO\",\"int\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 23:\n\n    var tmp = new Nodo(\"DEF_TIPO\",\"double\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 24:\n\n    var tmp = new Nodo(\"DEF_TIPO\",\"char\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 25:\n   \n    var tmp = new Nodo(\"DEF_TIPO\",\"boolean\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 26:\n\n    var tmp = new Nodo(\"DEF_TIPO\",\"string\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 27:\n\n    var tmp = new Nodo(\"DEF_TIPO\",$$[$0].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 28:\n\n    console.log(\"entro al Inicio\");\n    var tmp = new Nodo(\"publico\",yytext.replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 29:\n\n    var tmp = new Nodo(\"privado\",yytext.replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 30:\n\n    var tmp = new Nodo(\"protegido\",yytext.replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 31:\n\n    var tmp = new Nodo(\"publico\",\"publico\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 32:\n\n    var tmp = new Nodo(\"OR\",\"or\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 33:\n\n    var tmp = new Nodo(\"OR\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 34:\n\n    var tmp = new Nodo(\"XOR\",\"xor\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 35:\n\n    var tmp = new Nodo(\"XOR\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 36:\n\n    var tmp = new Nodo(\"AND\",\"and\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 37:\n\n    var tmp = new Nodo(\"AND\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 38:\n\n    var tmp = new Nodo(\"NOT\",\"not\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 39:\n\n    var tmp = new Nodo(\"NOT\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 40:\n\n    var tmp = new Nodo(\"EXP\",\">\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 41:\n\n    var tmp = new Nodo(\"EXP\",\"<\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 42:\n\n    var tmp = new Nodo(\"EXP\",\">=\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 43:\n\n    var tmp = new Nodo(\"EXP\",\"<=\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 44:\n\n    var tmp = new Nodo(\"EXP\",\"!=\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 45:\n\n    var tmp = new Nodo(\"EXP\",\"==\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 46:\n\n    var tmp = new Nodo(\"EXP\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 47:\n\n    var tmp = new Nodo(\"E\",\"+\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 48:\n\n    var tmp = new Nodo(\"E\",\"-\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 49: case 60:\n\n    var tmp = new Nodo(\"E\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 50:\n\n    var tmp = new Nodo(\"T\",\"*\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 51:\n\n    var tmp = new Nodo(\"T\",\"/\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 52:\n\n    var tmp = new Nodo(\"T\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 53:\n\n    var tmp = new Nodo(\"F\",\"^\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 54:\n\n    var tmp = new Nodo(\"F\",\"%\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-2]);\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 55:\n\n    var tmp = new Nodo(\"F\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 56:\n\n    var tmp = new Nodo(\"G\",\"++\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-1]);\n    this.$ = tmp;\n\nbreak;\ncase 57:\n\n    var tmp = new Nodo(\"G\",\"--\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0-1]);\n    this.$ = tmp;\n\nbreak;\ncase 58:\n\n    var tmp = new Nodo(\"G\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 59:\n\n    var tmp = new Nodo(\"E\",\"-\",yylineno,0,countNodo);\n    countNodo++;\n    tmp.addHijo($$[$0]);\n    this.$ = tmp;\n\nbreak;\ncase 61: case 62: case 64: case 65:\n\n    var tmp = new Nodo(\"U\",$$[$0].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 63:\n\n    var tmp = new Nodo(\"U\",$$[$0].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\").replace(\"\\\"\",\"\").replace(\"\\\"\",\"\"),yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 66:\n\n    var tmp = new Nodo(\"U\",\"-1\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\ncase 67:\n\n    var tmp = new Nodo(\"U\",\"noterminal\",yylineno,0,countNodo);\n    countNodo++;\n    this.$ = tmp;\n\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:4,8:5,9:6,10:$V0,15:8,16:$V1,38:$V2,39:$V3,40:$V4},{1:[3]},{5:[1,12]},{5:[2,2],7:13,8:5,9:6,10:$V0,15:8,16:$V1,38:$V2,39:$V3,40:$V4},o($V5,[2,4]),o($V5,[2,5]),o($V5,[2,6]),{11:[1,14]},{16:[1,15]},o($V6,[2,28]),o($V6,[2,29]),o($V6,[2,30]),{1:[2,1]},o($V5,[2,3]),{12:[1,16]},{17:[1,17]},{13:[1,18]},{18:[1,19]},{14:[1,20]},o($V7,$V1,{19:21,21:22,22:23,23:24,15:26,24:$V8,38:$V2,39:$V3,40:$V4}),o($V5,[2,7]),o($V7,$V1,{22:23,23:24,15:26,21:28,20:[1,27],24:$V8,38:$V2,39:$V3,40:$V4}),o($V9,[2,10]),{14:[1,29]},{14:[1,30]},{14:[1,31]},{17:$Va,25:[1,32],26:33,33:$Vb,34:$Vc,35:$Vd,36:$Ve,37:$Vf},o($V5,[2,8]),o($V9,[2,9]),o($V9,[2,11]),o($V9,[2,12]),o($V9,[2,13]),{17:$Va,26:40,33:$Vb,34:$Vc,35:$Vd,36:$Ve,37:$Vf},{17:[1,41]},{17:[2,22]},{17:[2,23]},{17:[2,24]},{17:[2,25]},{17:[2,26]},{17:[2,27]},{17:[1,42]},{14:[2,17],27:[1,43],29:44,30:45,31:$Vg},{14:[2,16],27:[1,47]},{11:$Vh,12:$Vi,28:48,42:49,44:50,46:51,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{14:[2,18],30:68,31:$Vg},o($Vq,[2,20]),{32:[1,69]},{11:$Vh,12:$Vi,28:70,42:49,44:50,46:51,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{14:[2,15],41:$Vr},o($Vs,[2,33],{43:$Vt}),o($Vu,[2,35],{45:$Vv}),o($Vw,[2,37]),{11:$Vh,12:$Vi,48:74,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},o($Vw,[2,39]),o($Vw,[2,46],{50:[1,75],51:[1,76],52:[1,77],53:[1,78],54:[1,79],55:[1,80],56:$Vx,58:$Vy}),o($Vz,[2,49],{59:$VA,61:$VB}),o($VC,[2,52],{62:$VD,64:$VE}),o($VF,[2,55]),o($VF,[2,58],{66:[1,87],67:[1,88]}),{11:$Vh,12:$Vi,68:89,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},o($VG,[2,60]),o($VG,[2,61]),o($VG,[2,62]),o($VG,[2,63]),o($VG,[2,64]),o($VG,[2,65]),o($VG,[2,66]),{11:$Vh,12:$Vi,28:90,42:49,44:50,46:51,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},o($Vq,[2,19]),o($Vq,[2,21]),{14:[2,14],41:$Vr},{11:$Vh,12:$Vi,42:91,44:50,46:51,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,44:92,46:51,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,46:93,47:$Vj,48:53,49:54,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},o($Vw,[2,38]),{11:$Vh,12:$Vi,49:94,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,49:95,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,49:96,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,49:97,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,49:98,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,49:99,57:55,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,57:100,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,57:101,58:$Vk,60:56,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,58:$Vk,60:102,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,58:$Vk,60:103,63:57,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,58:$Vk,63:104,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},{11:$Vh,12:$Vi,58:$Vk,63:105,65:58,68:60,69:$Vl,70:$Vm,71:$Vn,72:$Vo,73:$Vp},o($VF,[2,56]),o($VF,[2,57]),o($VG,[2,59]),{13:[1,106],41:$Vr},o($Vs,[2,32],{43:$Vt}),o($Vu,[2,34],{45:$Vv}),o($Vw,[2,36]),o($Vw,[2,40],{56:$Vx,58:$Vy}),o($Vw,[2,41],{56:$Vx,58:$Vy}),o($Vw,[2,42],{56:$Vx,58:$Vy}),o($Vw,[2,43],{56:$Vx,58:$Vy}),o($Vw,[2,44],{56:$Vx,58:$Vy}),o($Vw,[2,45],{56:$Vx,58:$Vy}),o($Vz,[2,47],{59:$VA,61:$VB}),o($Vz,[2,48],{59:$VA,61:$VB}),o($VC,[2,50],{62:$VD,64:$VE}),o($VC,[2,51],{62:$VD,64:$VE}),o($VF,[2,53]),o($VF,[2,54]),o($VG,[2,67])],\ndefaultActions: {12:[2,1],34:[2,22],35:[2,23],36:[2,24],37:[2,25],38:[2,26],39:[2,27]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n    var countNodo=0;\n    var raizArbol;\n  \n\nexports.__esModule = true;\nrequire(\"collections/shim-array\");\nrequire(\"collections/listen/array-changes\");\nvar Nodo = /** @class */ (function () {\n    function Nodo(etq, lex, linea, columna, ide) {\n        this.etiqueta = etq;\n        this.lexema = lex;\n        this.linea = linea;\n        this.columna = columna;\n        this.id = ide;\n        this.hijos = new Array();\n    }\n    Nodo.prototype.addHijo = function (nuevo) {\n        this.hijos.push(nuevo);\n    };\n    Nodo.prototype.NodoC = function (etq, id, linea, columna) {\n        this.etiqueta = etq;\n        this.lexema = id;\n        this.linea = linea;\n        this.columna = columna;\n        this.hijos = new Array();\n    };\n    return Nodo;\n}());\nexports.Nodo = Nodo;\n\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 16\nbreak;\ncase 1:return 10\nbreak;\ncase 2:return 39\nbreak;\ncase 3:return 40\nbreak;\ncase 4:return 38\nbreak;\ncase 5:return 33\nbreak;\ncase 6:return 34\nbreak;\ncase 7:return 35\nbreak;\ncase 8:return 36\nbreak;\ncase 9:return 37\nbreak;\ncase 10:return 'Rasbstract'\nbreak;\ncase 11:return 'Rbreak'\nbreak;\ncase 12:return 'R_case'\nbreak;\ncase 13:return 'R_catch'\nbreak;\ncase 14:return 'R_continue'\nbreak;\ncase 15:return 'R_default'\nbreak;\ncase 16:return 'R_do'\nbreak;\ncase 17:return 'R_else'\nbreak;\ncase 18:return 'R_extends'\nbreak;\ncase 19:return 'R_for'\nbreak;\ncase 20:return 'R_final'\nbreak;\ncase 21:return 'R_graph_dot'\nbreak;\ncase 22:return 'R_if'\nbreak;\ncase 23:return 'R_instanceof'\nbreak;\ncase 24:return 'R_message'\nbreak;\ncase 25:return 'R_new'\nbreak;\ncase 26:return 'R_object'\nbreak;\ncase 27:return 'R_println'\nbreak;\ncase 28:return 'R_return'\nbreak;\ncase 29:return 'R_read_console'\nbreak;\ncase 30:return 'R_read_file'\nbreak;\ncase 31:return 25\nbreak;\ncase 32:return 'R_str'\nbreak;\ncase 33:return 'R_super'\nbreak;\ncase 34:return 'R_switch'\nbreak;\ncase 35:return 'R_this'\nbreak;\ncase 36:return 'R_toChar'\nbreak;\ncase 37:return 'R_toDouble'\nbreak;\ncase 38:return 'R_toString'\nbreak;\ncase 39:return 'R_toInt'\nbreak;\ncase 40:return 'R_try'\nbreak;\ncase 41:return 'R_while'\nbreak;\ncase 42:return 'R_write_file'\nbreak;\ncase 43:return 41\nbreak;\ncase 44:return 43\nbreak;\ncase 45:return 45\nbreak;\ncase 46:return 47\nbreak;\ncase 47:return 50\nbreak;\ncase 48:return 51\nbreak;\ncase 49:return 52\nbreak;\ncase 50:return 53\nbreak;\ncase 51:return 54\nbreak;\ncase 52:return 55\nbreak;\ncase 53:return 56\nbreak;\ncase 54:return 58\nbreak;\ncase 55:return 59\nbreak;\ncase 56:return 61\nbreak;\ncase 57:return 62\nbreak;\ncase 58:return 64\nbreak;\ncase 59:return 66\nbreak;\ncase 60:return 67\nbreak;\ncase 61:return 'RInterrogacion'\nbreak;\ncase 62:return 'RDosPuntos'\nbreak;\ncase 63:return 14\nbreak;\ncase 64:return 71\nbreak;\ncase 65:return 72\nbreak;\ncase 66:return 73\nbreak;\ncase 67:return 18\nbreak;\ncase 68:return 20\nbreak;\ncase 69:return 31\nbreak;\ncase 70:return 32\nbreak;\ncase 71:return 11\nbreak;\ncase 72:return 13\nbreak;\ncase 73:return 27\nbreak;\ncase 74:return 69\nbreak;\ncase 75:return 17\nbreak;\ncase 76:return 12\nbreak;\ncase 77:return 70\nbreak;\ncase 78:/* skip whitespace */\nbreak;\ncase 79:return 5\nbreak;\ncase 80:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:class\\b)/,/^(?:import\\b)/,/^(?:private\\b)/,/^(?:protected\\b)/,/^(?:public\\b)/,/^(?:int\\b)/,/^(?:double\\b)/,/^(?:char\\b)/,/^(?:boolean\\b)/,/^(?:String\\b)/,/^(?:abstract\\b)/,/^(?:break\\b)/,/^(?:case\\b)/,/^(?:catch\\b)/,/^(?:continue\\b)/,/^(?:default\\b)/,/^(?:do\\b)/,/^(?:else\\b)/,/^(?:extends\\b)/,/^(?:for\\b)/,/^(?:final\\b)/,/^(?:graph_dot\\b)/,/^(?:if\\b)/,/^(?:instanceof\\b)/,/^(?:message\\b)/,/^(?:new\\b)/,/^(?:Object\\b)/,/^(?:println\\b)/,/^(?:return\\b)/,/^(?:read_console\\b)/,/^(?:read_file\\b)/,/^(?:static\\b)/,/^(?:str\\b)/,/^(?:super\\b)/,/^(?:switch\\b)/,/^(?:this\\b)/,/^(?:toChar\\b)/,/^(?:toDouble\\b)/,/^(?:toString\\b)/,/^(?:toInt\\b)/,/^(?:try\\b)/,/^(?:while\\b)/,/^(?:write_file\\b)/,/^(?:\\|\\|)/,/^(?:\\|\\^)/,/^(?:&&)/,/^(?:!)/,/^(?:>)/,/^(?:<)/,/^(?:>=)/,/^(?:<=)/,/^(?:!=)/,/^(?:==)/,/^(?:\\+)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:\\^)/,/^(?:%)/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:\\?)/,/^(?::)/,/^(?:;)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:=)/,/^(?:-?[0-9]+(\\.[0-9]+)?\\b)/,/^(?:[a-zA-Z]([0-9A-Za-z]|_)*)/,/^(?:(\"[^\\\"]+\"))/,/^(?:( \\[a-zñA-ZÑ\\] \\| \\[0-9\\] ))/,/^(?:\\s+)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = Lexico;\nexports.Parser = Lexico.Parser;\nexports.parse = function () { return Lexico.parse.apply(Lexico, arguments); };\nexports.main = function commonjsMain (args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"]},"metadata":{},"sourceType":"module"}